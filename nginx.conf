user  root;
worker_processes  1;

error_log  /var/log/nginx/error.log;

pid        /var/run/nginx.pid;


events {
    worker_connections  10240;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    server_tokens   off;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    client_max_body_size 100m;
    proxy_read_timeout 3m;

    #security header
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header Content-Security-Policy "default-src * blob:; frame-src 'self' blob:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src * 'self' data:;";
#    add_header Content-Security-Policy "img-src 'self' data:; default-src * blob:; frame-src 'self' blob:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';";

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    #gzip  on;
    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 9;
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";

    # To protect against DDOS
    # share memmory = 10m
    # not more than 10 requests per second per ip
    limit_req_zone $binary_remote_addr zone=req1:10m rate=10r/s;

    # share memory = 10m
    limit_conn_zone $binary_remote_addr zone=conn1:10m;


    server {
        listen      80;
        # To protect against DDOS
        # 10 connections per ip
        limit_conn conn1 10;

    # Formular:
    # maximum number of requests = rate * burst in burst seconds
    # maximum number of requests = 300 (=10*30) requests in 30 seconds
    # put the next request in the queue immediately
        limit_req zone=req1 burst=30 nodelay;
        charset utf-8;
    # Always serve index.html for any request
        location / {

        root /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html;
    }
        location ^~ /api/ {
            proxy_pass http://xxx.xxx.xxx.xx:30002; 
            proxy_set_header Host $http_host; 
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect default;
            auth_basic off;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
        root   /usr/share/nginx/html;
        }

    }
}
